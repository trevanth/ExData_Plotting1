source("http://bioconductor.org/biocLite.R")
biocLite()
find.package(devtools)
install.package(devtools)
matrix
cache
install.packages("RMySQL")
getwd()
install.packages("KernSmooth")
library(KernSmooth)
setwd("Coursera Data Science/")
pwd()
getwd()
GDP <- data.table(read.csv("getdata-data-GDP.csv", skip = 4, nrows = 215))
library(dplyr)
GDP <- data.table(read.csv("getdata-data-GDP.csv", skip = 4, nrows = 215))
library(data.table)
GDP <- data.table(read.csv("getdata-data-GDP.csv", skip = 4, nrows = 191))
tail(GDP)
library(dplyr)
GDP <- tbl_df(read.csv("getdata-data-GDP.csv", skip = 4, nrows = 190))
tail(GDP)
head(GDP)
GDP <- select(GDP, X, X.1, X.3, X.4)
GDP
names(GDP) <- c("CountryCode", "Rank", "LongName", "Economy_millions_USD" )
GDP
EDU <- tbl_df(read.csv("getdata-data-EDSTATS_Country.csv"))
EDU
?dplyr
data <- join(EDU, GDP)
data <- join.tbl_df(EDU, GDP)
data <- left_join(EDU, GDP)
data
?distinct
?count
count(distinct(data, CountryCode))
?arrange
data <- arrange(data, desc(Rank))
count(distinct(data, Rank))
data[13, Long.Name]
data[13, "Long.Name"]
?group_by
group_by(data, "Income.Group")
data <- group_by(data, "Income.Group")
?mutate
?avg
mutate(data, avg_rank = mean(Rank))
data <- mutate(data, avg_rank = mean(Rank))
head(data)
distinct(data$avg_rank)
?summarize
summarize(data, mean(Rank))
summarize(data, mean(Rank), na.rm = TRUE)
data <- left_join(EDU, GDP)
data <- arrange(data, desc(Rank))
data <- group_by(data, "Income.Group")
summarize(data, mean(Rank), na.rm = TRUE)
summarize(group_by(data, "Income.Group"), mean(Rank, na.rm = TRUE))
summarize(group_by(data, "Income.Group"), mean(Rank))
summarize(data, mean(Rank))
data$Income.Group <- factor(data$Income.Group)
summarize(data, mean(Rank))
summarize(data$Income.Group
)
data$Income.Group
?filter
data_high1 <- filter(data, Income.Group == "High income: OECD")
mean(data_high1$Rank)
data_high2 <- filter(data, Income.Group == "High income: nonOECD")
mean(data_high2$Rank)
mean(data_high2$Rank, na.rm = TRUE)
quantile(GDP$Rank)
setwd(â€œ/Users/Revanth/Coursera Data Science/getting_and_cleaning_data_project")
setwd("/Users/Revanth/Coursera Data Science/getting_and_cleaning_data_project")
setwd("/Users/Revanth/Coursera Data Science/getting_and_cleaning_data_project")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
f <- "Dataset.zip"
download.file(url, file.path(path, f), method = "curl")
packages <- c("data.table", "reshape2")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
download.file(url, file.path(path, f), method = "curl")
path <- getwd()
download.file(url, file.path(path, f), method = "curl")
f + path
"f" + "path"
getwd()
paste (path, f, sep = "/", collapse = NULL)
paste(path, f, sep = "/", collapse = NULL)
unzip(full_path, files = NULL, list = FALSE, overwrite = TRUE,
junkpaths = FALSE, exdir = ".", unzip = "internal",
setTimes = FALSE)
full_path <- paste(path, f, sep = "/", collapse = NULL)
unzip(full_path, files = NULL, list = FALSE, overwrite = TRUE,
junkpaths = FALSE, exdir = ".", unzip = "internal",
setTimes = FALSE)
require(knitr)
require(knitr)
require(markdown)
setwd("/Users/Revanth/Coursera Data Science/get_data_project")
knit("run_analysis.Rmd", encoding="ISO8859-1")
markdownToHTML("run_analysis.md", "run_analysis.html")
setwd("/Users/Revanth/Coursera Data Science/ExData_Plotting1/")
source("plot1.R")
function()
library(datasets)
function()
